---
- name: Update TLS Certs
  hosts : all_servers
  gather_facts: False
  become : true
  tasks:
        
    - name: Template the certbot script
      ansible.builtin.template:
        src: certbot_renew.sh.j2
        dest: "/home/{{ ansible_user }}/containers/nginx/certbot_renew.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0774

    - name: Template Linode DNS Credentails.
      ansible.builtin.template:
        src: linode.ini.j2
        dest: /var/lib/docker/volumes/letsencrypt-var/_data/credentials.ini
        owner: root
        group: root
        mode: 0600

# This method was working but also hanging in ansible and locked up alot of resources on the server causing a restart
# Switching to a different method, looking at the docker module to run Certbot.
# Keeping the template since it does result in an easy to run script on the host if needed


    # - name: Renew lets encrypt certs via Certbot.
    #   ansible.builtin.shell: 
    #     cmd: "/home/{{ ansible_user }}/containers/nginx/certbot_renew.sh"
    #   register: result

    # - name: Debug results
    #   ansible.builtin.debug:
    #     var: result

    - name: Run Linode certbot 
      community.docker.docker_container:
        name: "certbot"
        image: "certbot/dns-linode"
        state: started
        restart_policy: no
        auto_remove: yes
        volumes:
          - "letsencrypt-etc:/etc/letsencrypt"
          - "letsencrypt-var:/var/lib/letsencrypt"
        command: >
          certonly
          --dns-linode-credentials /var/lib/letsencrypt/credentials.ini
          --agree-tos
          --register-unsafely-without-email
          --dns-linode
          --dns-linode-propagation-seconds 180
          --expand
          --server https://acme-v02.api.letsencrypt.org/directory
          {{ domains }}
        command_handling: "compatibility"  
      vars:
        domains: >-
          {%+ for server in proxied_services -%}
                  -d {{ server }}{{ subdomain }}{{ domain }}
          {% endfor %}




